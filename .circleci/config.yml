version: 2.1
orbs:
  node: circleci/node@1.1.6
  docker: circleci/docker@1.0.1
  heroku: circleci/heroku@1.0.1

jobs:
  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git
  build:
    description: 'Run build'
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: v1-npm-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: 'yarn build'
  test:
    description: 'Test app'
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-deps-{{ checksum "yarn.lock" }}
      - run:
          name: Test
          command: 'yarn test'
  # push_heroku:
  #   description: 'Push to Heroku'
  #   executor: node/default
  #   steps:
  #     - checkout
  #     - run:
  #         name: 'Install Heroku CLI'
  #         command: |
  #           if [[ $(command -v heroku) == "" ]]; then
  #             curl https://cli-assets.heroku.com/install.sh | sh
  #           else
  #             sudo apt update && sudo apt install heroku
  #             echo "Heroku is already installed. No operation was performed."
  #           fi
  #     - run:
  #         name: 'Push to Heroku'
  #         command: |
  #           git remote add heroku https://git.heroku.com/e-coach-staging.git
  #           git push heroku master --force
  # build_docker:
  #   description: 'Build and deploy to Heroku'
  #   executor: docker/machine
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #           - v1-npm-deps-{{ checksum "yarn.lock" }}
  #     - run:
  #         name: 'Install Heroku CLI'
  #         command: |
  #           if [[ $(command -v heroku) == "" ]]; then
  #             curl https://cli-assets.heroku.com/install.sh | sh
  #           else
  #             sudo apt update && sudo apt install heroku
  #             echo "Heroku is already installed. No operation was performed."
  #           fi
  #     - run:
  #         name: 'Heroku login'
  #         command: >
  #           docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY
  #           registry.heroku.com
  #     - run:
  #         name: 'Deploy to Heroku'
  #         command: |
  #           heroku container:push web -a e-coach-staging
  #           heroku container:release web -a e-coach-staging
workflows:
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
